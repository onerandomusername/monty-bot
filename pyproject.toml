[tool.poetry]
name = "monty"
version = "1.0.0"
description = "Helpful bot for python, github, and discord things."
authors = ["aru <genericusername414@gmail.com>"]
license = "MIT"

[tool.poetry.dependencies]
python = "~=3.9"
aiodns = "~=3.0"
aiohttp = { version = "~=3.8.3", extras = ['speedups'] }
arrow = "~=1.2.3"
attrs = "^22.1.0"
base65536 = "^0.1.1"
beautifulsoup4 = "^4.10.0"
cachingutils = { git = "https://github.com/onerandomusername/cachingutils.git", rev='vcokltfre/feat/v2' }
colorama = { version = "~=0.4.5", markers = "sys_platform == 'win32'" }
coloredlogs = "~=15.0"
disnake = { git = "https://github.com/onerandomusername/disnake.git", rev='enums' }
fakeredis = { url = "https://github.com/dsoftwareinc/fakeredis-py/archive/3b22120dc7718eb63418a48bdcf07532f4e3cbdc.zip", optional = true }
gql = "^3.4.0"
lxml = "^4.9.1"
markdownify = "==0.11.2"
mistune = "^2.0.4"
redis = { version = "^4.3.1", extras = ['hiredis'] }
Pillow = "^9.2.0"
psutil = "^5.9.2"
rapidfuzz = "^2.10.2"
statsd = "^3.3.0"
tomli = "^2.0.1"
# database dependencies
alembic = "^1.8.1"
asyncpg = "^0.26.0"
databases = "^0.6.1"
ormar = { version = "^0.11.3", extras = ["orjson"] }
psycopg2-binary = "^2.9.3"
pydantic = "^1.10.2"
SQLAlchemy = "^1.4.41"
ormar-postgres-extensions = "^2.1.0"
sentry-sdk = "^1.9.8"

[tool.poetry.extras]
fakeredis = ['fakeredis']


[tool.poetry.dev-dependencies]
black = "^22.8"
coverage = "~=6.4"
flake8 = "~=5.0"
flake8-annotations = "~=2.9.1"
flake8-bugbear = "~=22.9.11"
flake8-docstrings = "~=1.6"
flake8-isort = "^4.2.0"
flake8-string-format = "~=0.3"
flake8-tidy-imports = "~=4.1"
flake8-todo = "~=0.7"
isort = "^5.10.1"
pre-commit = "~=2.20.0"
taskipy = "~=1.10.3"
python-dotenv = "~=0.21.0"
pytest = "~=7.1.3"
pytest-cov = "~=3.0.0"
pytest-xdist = { version = "~=2.5.0", extras = ["psutil"] }
pyright = "^1.1.270"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ['py38']
include = '\.pyi?$'

[tool.taskipy.tasks]
export = 'poetry export --without-hashes -o requirements.txt'
start = "python -m monty"
lint = "pre-commit run --all-files"
precommit = "pre-commit install"
pyright = { cmd = "dotenv -f task.env run -- pyright", help = "Run pyright" }
test-nocov = "pytest -n auto"
test = "pytest -n auto --cov-report= --cov"
html = "coverage html"
report = "coverage report"

[tool.coverage.run]
branch = true
source_pkgs = ["bot"]
source = ["tests"]


[tool.pyright]
typeCheckingMode = "basic"
include = [
    "monty",
    "*.py",
]

strictParameterNoneValue = false
